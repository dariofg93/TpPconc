/*
 * This file was automatically generated by EvoSuite
 * Tue May 31 00:30:55 ART 2016
 */

package tpConcurrente;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ConcurDerivative_ESTest extends ConcurDerivative_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(671);
      // Undeclared exception!
      try { 
        concurDerivative0.assign((ConcurDerivative) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(19);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      concurDerivative0.differentiate();
      ConcurDerivative concurDerivative2 = concurDerivative0.differentiate();
      concurDerivative2.differentiate();
      concurDerivative0.differentiate();
      concurDerivative0.dimension();
      concurDerivative0.set(1, (double) (-2581));
      concurDerivative0.differentiate();
      concurDerivative1.dimension();
  }
 
  @Test
  public void test02()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      concurDerivative0.dimension();
      // Undeclared exception!
      try { 
        concurDerivative0.differentiate();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(2531);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative1.sub(concurDerivative0);
       //  fail("Expecting exception: TooManyResourcesException");
       // Unstable assertion
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(201);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      ConcurDerivative concurDerivative2 = concurDerivative0.differentiate();
      concurDerivative0.differentiate();
      ConcurDerivative concurDerivative3 = concurDerivative0.differentiate();
      concurDerivative3.differentiate();
      concurDerivative2.differentiate();
      concurDerivative2.differentiate();
      concurDerivative2.set((double) 201);
      concurDerivative2.differentiate();
      concurDerivative0.differentiate();
      concurDerivative3.sub(concurDerivative1);
      ConcurDerivative concurDerivative4 = new ConcurDerivative(201);
      ConcurDerivative concurDerivative5 = new ConcurDerivative(201);
      ConcurDerivative concurDerivative6 = new ConcurDerivative(201);
      concurDerivative6.abs();
      concurDerivative1.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative5.get(201);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test05()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(965);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      concurDerivative0.differentiate();
      concurDerivative0.get(0);
      concurDerivative0.differentiate();
      concurDerivative1.differentiate();
      concurDerivative0.differentiate();
      ConcurDerivative concurDerivative2 = new ConcurDerivative(965);
      // Undeclared exception!
      try { 
        concurDerivative2.differentiate();
       //  fail("Expecting exception: TooManyResourcesException");
       // Unstable assertion
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      concurDerivative0.add((ConcurDerivative) null);
  }

  @Test
  public void test07()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(671);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative0.div(concurDerivative1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test08()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      ConcurDerivative concurDerivative1 = new ConcurDerivative(0);
      concurDerivative0.mul(concurDerivative1);
  }

  @Test
  public void test09()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(213);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative1.set(213, (double) 213);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(1010);
      concurDerivative0.dimension();
      concurDerivative0.differentiate();
      ConcurDerivative concurDerivative1 = null;
      try {
        concurDerivative1 = new ConcurDerivative((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(2431);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative0.sub(concurDerivative1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(3096);
      concurDerivative0.differentiate();
      // Undeclared exception!
      try { 
        concurDerivative0.differentiate();
       //  fail("Expecting exception: TooManyResourcesException");
       // Unstable assertion
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      // Undeclared exception!
      try { 
        concurDerivative0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      ConcurDerivative concurDerivative1 = new ConcurDerivative(2);
      concurDerivative0.sub(concurDerivative1);
      ConcurDerivative concurDerivative2 = concurDerivative1.differentiate();
      concurDerivative0.assign(concurDerivative2);
  }

  @Test
  public void test15()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(3633);
      ConcurDerivative concurDerivative1 = new ConcurDerivative(3345);
      // Undeclared exception!
      try { 
        concurDerivative0.assign(concurDerivative1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 2531;
      ConcurDerivative concurDerivative0 = new ConcurDerivative(2531);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      concurDerivative1.set((double) 2531);
      // Undeclared exception!
      try { 
        concurDerivative1.mul(concurDerivative0);
       //  fail("Expecting exception: TooManyResourcesException");
       // Unstable assertion
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 0;
      ConcurDerivative concurDerivative0 = new ConcurDerivative(0);
      // Undeclared exception!
      try { 
        concurDerivative0.differentiate();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-2256);
      ConcurDerivative concurDerivative0 = null;
      try {
        concurDerivative0 = new ConcurDerivative((-2256));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 1;
      ConcurDerivative concurDerivative0 = new ConcurDerivative(1);
      double double0 = (-711.84);
      // Undeclared exception!
      try { 
        concurDerivative0.differentiate();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      ConcurDerivative concurDerivative0 = new ConcurDerivative(1);
      // Undeclared exception!
      try { 
        concurDerivative0.differentiate();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      int int0 = 886;
      ConcurDerivative concurDerivative0 = new ConcurDerivative(886);
      ConcurDerivative concurDerivative1 = concurDerivative0.differentiate();
      concurDerivative1.differentiate();
      ConcurDerivative concurDerivative2 = concurDerivative0.differentiate();
      ConcurDerivative concurDerivative3 = new ConcurDerivative(886);
      concurDerivative1.div(concurDerivative3);
      concurDerivative1.sub(concurDerivative0);
      // Undeclared exception!
      try { 
        concurDerivative1.add(concurDerivative2);
       //  fail("Expecting exception: TooManyResourcesException");
       // Unstable assertion
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      ConcurDerivative concurDerivative0 = null;
      try {
        concurDerivative0 = new ConcurDerivative((-1176));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      ConcurDerivative concurDerivative0 = null;
      try {
        concurDerivative0 = new ConcurDerivative((-2775));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      int int0 = (-85);
      ConcurDerivative concurDerivative0 = null;
      try {
        concurDerivative0 = new ConcurDerivative((-85));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tpConcurrente.ConcurDerivative", e);
      }
  }
}
